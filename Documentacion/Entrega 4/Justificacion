Mapeo de herencias: 
	Mapeamos herencias en Condiciones. Lo hicimos de modo singleTable, ya que varios de los atributos que se encuentran en las condiciones hijas se repiten, pudiendo sacar provecho de esto en tres aspectos: 1) Es más mantenible, ya que no tenemos varias tablas sino uno sola que contiene todos los valores. 2) No tenemos columnas repetidas en varias tablas, sino que la misma columna sirve en una misma tabla para satisfacer necesidades variadas. 3) Muy importante, mejora la performance de la aplicación, evitando el uso de Joins.

Fetch: 
	Tenemos una unión importante entre Empresa-Periodos y Periodo-Cuentas, para las cuales decidimos utilizar un FetchType Eager ya que, por como tenemos diseñada la app, los datos de empresas como tabla nos resulta vacío de contenido, y no nos es util a la hora de mostrar la información en la solapa de empresas. Al contrario, cada vez que requerimos de mostrarla, nos vemos obligados a mostrar los datos de los períodos y las cuentas. 
	También tenemos una importante unión entre Metodología y Condiciones, y esto no ocurre aquí, ya que en la solapa de Metodologías, nosotros no mostramos cada una de las condiciones que esta tiene, sino simplemente por el nombre. Y sólo cuando las consultamos nos fijamos cuáles son sus condiciones. Es por esto que en este caso utilizamos un FetchType Lazy.

Cascade: 
	En todos los casos utilizamos cascade.ALL. En cualquiera de los casos (períodos en empresas, cuentas en períodos, condiciones en metodologías), por como tenemos diseñado el sistema, no nos son de utilidad los valores de esas entidades si su padre no existe. Por ejemplo, un periodo sin empresa, no es un dato útil, no tiene valor para nosotros, por lo tanto lo eliminamos si se elimina la empresa, y lo updateamos o guardamos de la misma forma. Lo mismo ocurre con los períodos y sus cuentas. En el caso de las metodologías y sus condiciones, por la manera en que las usamos nosotros (una condición pertenece a una sola metodología, no se reutilizan para varias) utilizamos otra vez el cascade.ALL ya que una condición sin su metodología nunca va a ser evaluada.
